{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"src/app/user.service\";\n\nfunction AuthentificationComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1, \" Connection succesfully \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AuthentificationComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1, \" Connection error! \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c0 = function () {\n  return [\"/inscription\"];\n};\n\nexport let AuthentificationComponent = /*#__PURE__*/(() => {\n  class AuthentificationComponent {\n    constructor(http, formBuilder, router, location, user) {\n      this.http = http;\n      this.formBuilder = formBuilder;\n      this.router = router;\n      this.location = location;\n      this.user = user;\n      this.connectForm = [];\n      this.connectForm = this.formBuilder.group({\n        email: ['', Validators.required],\n        password: ['', Validators.required],\n        gethash: [''],\n        remember_me: ['']\n      });\n    }\n\n    ngOnInit() {\n      this.http.get('http://localhost:8000', {\n        withCredentials: true\n      }).subscribe(valeur => {\n        if (valeur.user !== null) {\n          this.router.navigate(['/user']);\n          alert('Vous êtes déjà connecter');\n        } else {\n          this.http.get('http://localhost:8000/login', {\n            withCredentials: true\n          }).subscribe(valeur => {\n            this.data = valeur;\n            console.log(this.data);\n          }, error => {\n            console.log(error);\n            alert(error);\n          });\n        }\n      });\n    }\n    /*se_connecter(){\r\n          this.user.signin(this.connectForm.value, [],{ withCredentials : true}).subscribe((reponse: any) =>{\r\n            console.log(reponse.value);\r\n            this.status = reponse.status;\r\n        if(reponse.status != \"success\"){\r\n          this.status == 'error'\r\n        }\r\n      })\r\n    }*/\n\n\n    se_connecter() {\n      this.http.post('http://localhost:8000/login', this.connectForm.value, {\n        withCredentials: true\n      }).subscribe(reponse => {\n        this.status = reponse.status;\n\n        if (reponse.status != \"success\") {\n          this.status == 'error';\n        }\n\n        this.router.navigate(['/user']);\n      });\n    }\n\n  }\n\n  AuthentificationComponent.ɵfac = function AuthentificationComponent_Factory(t) {\n    return new (t || AuthentificationComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.Location), i0.ɵɵdirectiveInject(i5.UserService));\n  };\n\n  AuthentificationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AuthentificationComponent,\n    selectors: [[\"app-authentification\"]],\n    decls: 37,\n    vars: 8,\n    consts: [[1, \"container\"], [1, \"row\"], [1, \"col-md-5\", \"mx-auto\"], [3, \"formGroup\", \"ngSubmit\"], [\"class\", \"alert alert-success\", 4, \"ngIf\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"field\"], [\"for\", \"telephone\"], [\"type\", \"text\", \"required\", \"required\", \"name\", \"email\", \"formControlName\", \"email\", 1, \"form-control\", 3, \"value\", \"placeholder\"], [\"type\", \"password\", \"required\", \"required\", \"name\", \"password\", \"formControlName\", \"password\", 1, \"form-control\"], [1, \"checkbox\"], [\"type\", \"checkbox\", \"name\", \"_remember_me\"], [\"type\", \"submit\", 1, \"btn\", \"btn-lg\", \"btn-block\", \"btn-primary\", 3, \"disabled\"], [1, \"mt-5\", \"text-muted\"], [3, \"routerLink\"], [1, \"alert\", \"alert-success\"], [1, \"alert\", \"alert-danger\"]],\n    template: function AuthentificationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"br\")(1, \"br\")(2, \"br\");\n        i0.ɵɵelementStart(3, \"div\", 0)(4, \"div\", 1)(5, \"div\", 2)(6, \"h1\");\n        i0.ɵɵtext(7, \"Se Connecter\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function AuthentificationComponent_Template_form_ngSubmit_8_listener() {\n          return ctx.se_connecter();\n        });\n        i0.ɵɵtemplate(9, AuthentificationComponent_div_9_Template, 2, 0, \"div\", 4);\n        i0.ɵɵtemplate(10, AuthentificationComponent_div_10_Template, 2, 0, \"div\", 5);\n        i0.ɵɵelementStart(11, \"div\", 6)(12, \"label\", 7);\n        i0.ɵɵtext(13, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 6)(16, \"label\", 7);\n        i0.ɵɵtext(17, \"Mot de passe\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 10)(20, \"label\");\n        i0.ɵɵelement(21, \"input\", 11);\n        i0.ɵɵtext(22, \"Remember me \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(23, \"br\");\n        i0.ɵɵelementStart(24, \"button\", 12);\n        i0.ɵɵtext(25, \"Se connecter\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(26, \"br\");\n        i0.ɵɵelementStart(27, \"p\", 13);\n        i0.ɵɵtext(28, \"Pas de compte? \");\n        i0.ɵɵelementStart(29, \"a\", 14);\n        i0.ɵɵtext(30, \" Cr\\u00E9er un compte\");\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelement(31, \"br\")(32, \"br\")(33, \"br\")(34, \"br\")(35, \"br\")(36, \"br\");\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"formGroup\", ctx.connectForm);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.status === \"success\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.status === \"error\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵpropertyInterpolate(\"value\", ctx.data.last_username);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.data.last_username);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"disabled\", !ctx.connectForm.form.valid);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(7, _c0));\n      }\n    },\n    dependencies: [i4.NgIf, i3.RouterLinkWithHref, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.FormGroupDirective, i2.FormControlName]\n  });\n  return AuthentificationComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}